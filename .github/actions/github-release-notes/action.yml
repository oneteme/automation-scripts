name: Create GitHub Release with Auto-Generated Notes
inputs:
  version:
    description: "Version of the project to be released"
    required: true
  draft:
    description: "Indicates if the release is a draft"
    type: boolean
    required: false
    default: false
runs:
  using: "composite"
  steps:
  - name: Check if draft release exists
    id: check_release
    shell: bash
    run: |
      gh release list \
      --repo="${{ github.repository }}" \
      --json name --jq '.[] | select(.name == "v${{ inputs.version }}") | .isDraft'
  # - name: cleanup release
  #   shell: bash
  #   if: ${{ inputs.draft && env.release_exists == 'true' }}
  #   run: |
  #     gh release delete -y \
  #       --repo="${{ github.repository }}" \
  #       --cleanup-tag "v${{ inputs.version }}"
  - name: Generate and Publish GitHub Release
    shell: bash
    run: |
      gh release create "v${{ inputs.version }}" \
        --repo="${{ github.repository }}" \
        --target="${{ github.ref_name }}" \
        --title="v${{ inputs.version }}" \
        --generate-notes \
        ${{ inputs.draft && '--draft' }}